#include<stdio.h>
#include<ctype.h>
#define max 100
struct stack
{
	char a[max];
	int top;

}s;
void init()
{
	s.top=-1;
}
int isempty()
{
	if(s.top==-1)
	  return 1;
	else 
	  return 0;
}
int isfull()
{
	if(s.top==max-1)
	 return 1;
	else 
	 return 0;
}

void push(char x)
{
	if(isfull())
	 printf("stack is full dont push");
	else
	 {
	 	s.top++;
	 	s.a[s.top]=x;
	 }
}

char pop()
{
	char ch;
	if(isempty())
	 printf("stack is full dont pop");
	else
	 {
	 	ch=s.a[s.top];
	 	s.top--;
	 	return ch;
	 }
}

int priority(char x)
{
	if(x=='(')
	return 0;
	if(x=='+'||x=='-')
	return 1;
	if(x=='*'||x=='/')
	return 2;
	if(x=='$')
	return 3;
	return 0;
}
int main()
{
	char s1[100],ch;
	int i;
	printf("enter the expression");
	scanf("%s",&s1);
	init();
	 for(i=0;s1[i]!='\0';i++)
	 {
	 	if(isalpha(s1[i]))
	 	printf("%c",s1a/[i]);
	    else if(s1[i]=='(')
	    push(s1[i]);
	    else if(s1[i]==')')
	    {
	    	while((ch=pop())!='(')
	    	{
	    		printf("%c",ch);
			}
		}
		else
		 {
		 	while(priority(s.a[s.top])>=priority(s1[i]))
		 	{
			  printf("%c",pop());
			}
			push(s1[i]);
		 }
	      
	 }
	 while(isempty())
	 printf("%c",pop());
}
